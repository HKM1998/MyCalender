package com.kosmo.mycalender.account.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.kosmo.mycalender.account.dto.AccountBookDTO;
import com.kosmo.mycalender.account.dto.CalenderEventDTO;
import com.kosmo.mycalender.account.service.AccountBookService;
import com.kosmo.mycalender.account.service.CalenderEventService;

@RestController
@RequestMapping("/api/records")
public class AccountBookAPIController {
	@Autowired
	private AccountBookService accountBookService;
	@Autowired
	private CalenderEventService calenderEventService;
	
	@GetMapping
	public List<AccountBookDTO> getRecords(@RequestParam(value = "start", required = false) String start
			, @RequestParam(value = "end", required = false) String end
			, @RequestParam(value = "userId", required = false) String userId){
		List<AccountBookDTO> records;
		records = accountBookService.getRecordsByDateTerm(start, end, userId);
		return records;
	}
	

	@GetMapping("{date}")
	public List<AccountBookDTO> getDateRecords(@PathVariable("date") String date
			, @RequestParam(value = "userId", required = false) String userId){
		List<AccountBookDTO> records;
		records = accountBookService.getRecordsByDate(date, userId);
		return records;
	}
	
	@PostMapping
	public String addRecord(@RequestBody AccountBookDTO accountBookDTO
			, @RequestParam(value = "userId", required = false) String userId) {
		accountBookService.addRecord(accountBookDTO, userId);
		
		return "정상처리";
	}
	
	@DeleteMapping("{idx}")
	public String deleteRecord(@PathVariable("idx") Long idx) {
		accountBookService.deleteRecord(idx);
		
		return "정상처리";
	}
	
	@GetMapping("/events")
	public List<CalenderEventDTO> getEvents(@RequestParam(value = "userId", required = false) String userId){
		List<CalenderEventDTO> events;
		events = calenderEventService.getEvents(userId);
		return events;
	}
}
